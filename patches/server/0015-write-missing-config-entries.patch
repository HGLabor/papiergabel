From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: mooziii <63669478+mooziii@users.noreply.github.com>
Date: Sun, 19 Jun 2022 11:11:05 +0200
Subject: [PATCH] write missing config entries


diff --git a/src/main/java/de/hglabor/papiergabel/config/PapiergabelConfig.java b/src/main/java/de/hglabor/papiergabel/config/PapiergabelConfig.java
index 4367c9f44da9895a386d48985f5574a18c325fc9..b1dd1d57223a0118a27589f032f0ed620eb28e4f 100644
--- a/src/main/java/de/hglabor/papiergabel/config/PapiergabelConfig.java
+++ b/src/main/java/de/hglabor/papiergabel/config/PapiergabelConfig.java
@@ -44,15 +44,16 @@ public class PapiergabelConfig {
         if(!file.exists()) {
             file.createNewFile();
             config = YamlConfiguration.loadConfiguration(file);
-            writeDefaults(file);
+            writeDefaults(file, true);
         } else {
+            writeDefaults(file, false);
             config = YamlConfiguration.loadConfiguration(file);
         }
         setup();
         INSTANCE = instance;
     };
 
-    public static void writeDefaults(File file) throws Exception {
+    public static void writeDefaults(File file, boolean initial) throws Exception {
         Class<PapiergabelConfig> thisClass = PapiergabelConfig.class;
         Header header = thisClass.getAnnotation(Header.class);
         if(header != null) {
@@ -60,16 +61,16 @@ public class PapiergabelConfig {
         }
         for (Field field : thisClass.getFields()) {
             if(!isAnnotationPresent(field, Exclude.class)) {
-                serializeField(field, INSTANCE);
+                serializeField(field, INSTANCE, initial);
             }
         }
         config.save(file);
     }
 
-    private static void serializeField(Field field, Object instance) throws IllegalAccessException {
+    private static void serializeField(Field field, Object instance, boolean initial) throws IllegalAccessException {
         if(isAnnotationPresent(field.getType(), MustSerialize.class)) {
             for (Field nestedField : field.getType().getFields()) {
-                serializeField(nestedField, field.get(instance));
+                serializeField(nestedField, field.get(instance), initial);
             }
         } else {
             String fieldName = field.getName();
@@ -77,7 +78,9 @@ public class PapiergabelConfig {
             if(serialName != null) {
                 fieldName = serialName.value();
             }
-            config.set(field.getDeclaringClass().getSimpleName() + "." + fieldName, field.get(instance));
+            if(initial || !config.contains(field.getDeclaringClass().getSimpleName() + "." + fieldName)) {
+                config.set(field.getDeclaringClass().getSimpleName() + "." + fieldName, field.get(instance));
+            }
         }
     }
 
